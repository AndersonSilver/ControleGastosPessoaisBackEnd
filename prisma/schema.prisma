// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  name          String
  email         String          @unique
  password      String
  createdAt     DateTime        @default(now())
  dadosPessoais DadosPessoais[]
  profissional  Profissional[]
  financeiro    Financeiro[]
  receita       Receita[]
  despesa       Despesa[]
  transferencia Transferencia[]
  cartaoCredito CartaoCredito[]
  contaBancaria ContaBancaria[]
}

model DadosPessoais {
  id                 Int     @id @default(autoincrement())
  nameCompleto       String?
  telefone           String?
  cep                String?
  estado             String?
  cidade             String?
  aniversario        String?
  sexo               String?
  nascionalidade     String?
  cpf                String?
  objetivoFinanceiro String?
  user               User    @relation(fields: [userId], references: [id])
  userId             Int     @unique
}

model Profissional {
  id                    Int     @id @default(autoincrement())
  escolaridade          String?
  profissao             String?
  fonteRenda            String?
  rendaMensal           String?
  empresaAtual          String?
  atividadeDesenvolvida String?
  emailComercial        String?
  telefoneComercial     String?
  user                  User    @relation(fields: [userId], references: [id])
  userId                Int     @unique
}

model Financeiro {
  id               Int     @id @default(autoincrement())
  tipoMoradia      String?
  qtdPessoas       Int?
  qtdCartaoCredito Int?
  valorPatrimonio  String?
  possuiVeiculo    String?
  tipoVeiculo      String?
  user             User    @relation(fields: [userId], references: [id])
  userId           Int     @unique
}

model Receita {
  id        Int     @id @default(autoincrement())
  valor     Float?
  tipo      String?
  status    String?
  data      String?
  descricao String?
  categoria String?
  conta     String?
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
}

model Despesa {
  id        Int     @id @default(autoincrement())
  tipo      String?
  valor     Int?
  status    String?
  data      String?
  descricao String?
  categoria String?
  conta     String?
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
}

model Transferencia {
  id         Int     @id @default(autoincrement())
  data       String?
  observacao String?
  deConta    String?
  paraConta  String?
  valor      Int?
  user       User    @relation(fields: [userId], references: [id])
  userId     Int
}

model CartaoCredito {
  id             Int     @id @default(autoincrement())
  nome           String?
  limite         Int?
  dataVencimento String?
  dataFechamento String?
  bandeira       String?
  user           User    @relation(fields: [userId], references: [id])
  userId         Int
}

model ContaBancaria {
  id          Int     @id @default(autoincrement())
  instituicao String?
  descricao   String?
  tipoConta   String?
  saldo       Int?
  user        User    @relation(fields: [userId], references: [id])
  userId      Int
}
